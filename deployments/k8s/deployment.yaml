apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-hello-world
  namespace: developers-space
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-hello-world
  template:
    metadata:
      labels:
        app: node-hello-world
    spec:
      containers:
        - name: node-hello-world
          image: imtiazmasrur/node-hello-world:latest # image we have pushed to
          imagePullPolicy: Always # See: (Image pull policy options) https://www.airplane.dev/blog/kubernetes-image-pull-policy
          ports:
            - containerPort: 3000
          env:
            - name: DB_DIALECT
              value: postgres
            - name: DB_HOST
              value: 0.0.0.0
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: node-hello-world-secret
                  key: db-user
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: node-hello-world-secret
                  key: db-database
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: node-hello-world-secret
                  key: db-password
---
apiVersion: v1
kind: Service
metadata:
  name: node-hello-world
  namespace: developers-space
spec:
  selector:
    app: node-hello-world # This should match with Deployment selector.matchLabels.app (See line 10).
  ports:
    - protocol: TCP
      port: 3000 # Service will run on this port.
      targetPort: 3000 # this port should match the deployment's containerPort (See line 21).
      nodePort: 30000 # By nodePort, we can browse our app by IP address and port. Port range (30000 - 32767). Run `minikube service node-hello-world -n developers-space --url` to see the service URL.
  type: LoadBalancer # For external service we should use type as `LoadBalancer` and alse `nodePort`. For internal this will be `ClusterIP`.
